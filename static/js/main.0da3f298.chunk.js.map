{"version":3,"sources":["Components/Header/Header.jsx","Components/SearchBar/SearchBar.jsx","Components/InfoBox/StatusBar.jsx","Components/InfoBox/MainInfo.jsx","Components/InfoBox/MoreInfo.jsx","Components/Map.jsx","Components/InfoBox/InfoBox.jsx","mockResponse.js","Pages/App/App.jsx","serviceWorker.js","index.js"],"names":["HeaderComponent","Flex","as","align","justify","wrap","bg","padding","mr","Heading","size","letterSpacing","SearchBar","props","useState","value","setValue","isLoading","setIsloading","toast","useToast","handleSubmit","a","match","title","description","status","duration","isClosable","fetch","method","mode","response","json","then","res","undefined","data","console","log","setResponse","catch","err","error","finally","Box","mt","maxW","marginX","onSubmit","e","preventDefault","FormControl","FormLabel","htmlFor","Input","id","placeholder","aria-describedby","onChange","target","maxLength","FormHelperText","Button","marginLeft","onClick","LiveInfo","fontSize","shadow","display","md","textAlign","p","flexGrow","flight","iata","Text","airline","name","maxWidth","borderBottom","xs","departure","airport","margin","sm","FaPlane","borderTop","arrival","statusBox","heading","bgColor","textColor","color","justifyContent","statusBoxGenerator","flight_status","TimingInfo","convertTime","time","offset","DateTime","fromISO","setZone","timezone","toFormat","minus","hours","mb","Tag","icon","FaPlaneArrival","FaPlaneDeparture","my","gate","terminal","borderRight","scheduled","actual","estimated","actual_runway","MoreInfo","live","Accordion","allowMultiple","flex","flexWrap","pb","variant","latitude","longitude","altitude","direction","speed_horizontal","speed_vertical","aircraft","registration","icao","icao24","React","memo","position","setPosition","useEffect","lat","lng","googleMapsApiKey","mapContainerStyle","height","center","zoom","InfoBox","marginTop","border","borderRadius","StatusBar","flexDirection","MainInfo","Divider","orientation","Map","pagination","limit","count","total","flight_date","delay","estimated_runway","baggage","number","codeshared","updated","is_ground","App","defaultResponse","Header","Boolean","window","location","hostname","ReactDOM","render","StrictMode","ThemeProvider","CSSReset","document","getElementById","navigator","serviceWorker","ready","unregister","message"],"mappings":"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","file":"static/js/main.0da3f298.chunk.js","sourcesContent":["import React from \"react\";\nimport { Flex, Heading } from \"@chakra-ui/core\";\n\nconst HeaderComponent = () => {\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      bg=\"teal.500\"\n      padding=\"1.5rem\"\n    >\n      <Flex align=\"center\" mr={5}>\n        <Heading as=\"h1\" size=\"lg\" letterSpacing={\"-.1rem\"}>\n          Flight Tracker\n        </Heading>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default HeaderComponent;\n","import React, { useState } from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  FormHelperText,\n  Button,\n  Box,\n  useToast,\n} from \"@chakra-ui/core\";\n\nconst SearchBar = (props) => {\n  // const [invalid, setInvalid] = useState(true);\n  const [value, setValue] = useState(\"\");\n  const [isLoading, setIsloading] = useState(false);\n  const toast = useToast();\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = async (value) => {\n    if (!value.match(/^[A-Z]{2}\\d{3,4}$/gi)) {\n      toast({\n        title: \"Invalid flight designator\",\n        description: \"Please enter a valid flight designator\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n      });\n      return null;\n    }\n\n    setIsloading(true);\n\n    const response = await fetch(\n      `https://cors-anywhere.herokuapp.com/http://api.aviationstack.com/v1/flights?access_key=3ffefb67dcd0e291d5562eb4234186a9&flight_iata=${value}`,\n      {\n        method: \"GET\",\n        mode: \"cors\",\n      }\n    );\n    await response\n      .json()\n      .then((res) => {\n        if (res.data[0] !== undefined) {\n          console.log(res);\n          props.setResponse(res);\n        } else {\n          toast({\n            title: \"Flight not found.\",\n            description: \"We can't seem to find that flight.\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        setIsloading(false);\n      });\n  };\n\n  return (\n    <Box mt={5} maxW=\"4xl\" marginX=\"auto\">\n      <form onSubmit={(e) => e.preventDefault()}>\n        <FormControl marginX={3}>\n          <FormLabel htmlFor=\"FindFlight\">Find Flight</FormLabel>\n          <Input\n            id=\"FindFlight\"\n            placeholder=\"Flight designator/number..\"\n            aria-describedby=\"FindFlight-helper-text\"\n            value={value}\n            onChange={handleChange}\n            maxLength=\"6\"\n          />\n          <FormHelperText id=\"FindFlight-helper-text\">\n            e.g. DL1234 for Delta Airlines flight 1234\n          </FormHelperText>\n        </FormControl>\n        <Button\n          mt={3}\n          marginLeft={3}\n          isLoading={isLoading}\n          onClick={() => handleSubmit(value)}\n        >\n          Search\n        </Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport { Heading, Box, Text } from \"@chakra-ui/core\";\nimport { FaPlane } from \"react-icons/fa\";\n\nconst statusBoxGenerator = (value) => {\n  let statusBox = {\n    heading: \"--\",\n    bgColor: \"gray.400\",\n    textColor: \"white\",\n  };\n\n  switch (value) {\n    case \"active\":\n      statusBox.heading = \"Airborne\";\n      statusBox.bgColor = \"green.400\";\n      statusBox.textColor = \"white\";\n      break;\n    case \"scheduled\":\n      statusBox.heading = \"Scheduled\";\n      statusBox.bgColor = \"green.200\";\n      statusBox.textColor = \"white\";\n      break;\n    case \"cancelled\":\n      statusBox.heading = \"Cancelled\";\n      statusBox.bgColor = \"red.400\";\n      statusBox.textColor = \"black\";\n      break;\n    case \"landed\":\n      statusBox.heading = \"Landed\";\n      statusBox.bgColor = \"green.400\";\n      statusBox.textColor = \"green\";\n      break;\n    case \"incident\":\n      statusBox.heading = \"Incident\";\n      statusBox.bgColor = \"yellow.400\";\n      statusBox.textColor = \"black\";\n      break;\n    case \"diverted\":\n      statusBox.heading = \"Diverted\";\n      statusBox.bgColor = \"yellow.400\";\n      statusBox.textColor = \"black\";\n      break;\n    default: {\n      statusBox.heading = \"Airborne\";\n      statusBox.bgColor = \"green.400\";\n      statusBox.textColor = \"white\";\n    }\n  }\n\n  return (\n    <Box\n      flexGrow=\"1\"\n      p=\"0.5rem\"\n      color={statusBox.textColor}\n      bg={statusBox.bgColor}\n      justifyContent=\"center\"\n    >\n      <Heading size=\"md\">{statusBox.heading}</Heading>\n    </Box>\n  );\n};\n\nconst LiveInfo = (props) => {\n  return (\n    <Box fontSize=\"sm\" shadow=\"lg\" display={{ md: \"flex\" }} textAlign=\"center\">\n      <Box p=\"0.5rem\" flexGrow=\"0\" bg=\"gray.300\">\n        <Heading size=\"md\">{props.response.flight.iata || \"--\"}</Heading>\n        <Text>\n          {props.response.airline.name || \"--\"} (\n          {props.response.airline.iata || \"--\"})\n        </Text>\n      </Box>\n      <Box\n        p=\"0.5rem\"\n        maxWidth={{ md: \"20%\" }}\n        flexGrow=\"1\"\n        borderBottom={{ xs: \"1px solid black\", md: \"none\" }}\n      >\n        <Heading size=\"md\">{props.response.departure.iata || \"--\"}</Heading>\n        <Text>{props.response.departure.airport || \"--\"}</Text>\n      </Box>\n      <Box\n        margin={{ xs: \"auto\", md: \"auto 6rem\" }}\n        fontSize={{ sm: \"xl\", md: \"2xl\" }}\n        as={FaPlane}\n      />\n      <Box\n        p=\"0.5rem\"\n        maxWidth={{ md: \"20%\" }}\n        flexGrow=\"1\"\n        borderTop={{ xs: \"1px solid black\", md: \"none\" }}\n      >\n        <Heading size=\"md\">{props.response.arrival.iata || \"--\"}</Heading>\n        <Text>{props.response.arrival.airport || \"--\"}</Text>\n      </Box>\n      {statusBoxGenerator(props.response.flight_status)}\n    </Box>\n  );\n};\n\nexport default LiveInfo;\n","import React from \"react\";\nimport { Box, Text, Heading, Tag, TagLabel, TagIcon } from \"@chakra-ui/core\";\nimport { FaPlaneArrival, FaPlaneDeparture } from \"react-icons/fa\";\nimport { DateTime } from \"luxon\";\n\nconst TimingInfo = (props) => {\n  const convertTime = (time) => {\n    if (!time) {\n      return \"--\";\n    }\n\n    let offset = DateTime.fromISO(time)\n      .setZone(props.response.timezone)\n      .toFormat(\"Z\");\n\n    return DateTime.fromISO(time)\n      .setZone(props.response.timezone)\n      .minus({ hours: offset })\n      .toFormat(\"fff\");\n  };\n\n  //because the api is meh, i need to get the iso time, get the timezone, then subtract the timezone from the original time before trying to parse it with luxon\n\n  return (\n    <Box margin=\"auto\">\n      <Box mb={2} textAlign=\"center\">\n        <Tag>\n          <TagIcon icon={props.arrival ? FaPlaneArrival : FaPlaneDeparture} />\n          <TagLabel>{props.arrival ? \"Arrival\" : \"Departure\"}</TagLabel>\n        </Tag>\n      </Box>\n      <Box my={2} textAlign=\"center\">\n        <Tag mr={5}>\n          <TagLabel>\n            <strong>Gate: </strong>\n            {props.response.gate || \"--\"}\n          </TagLabel>\n        </Tag>\n        <Tag mt=\"2px\">\n          <TagLabel>\n            <strong>Terminal: </strong>\n            {props.response.terminal || \"--\"}\n          </TagLabel>\n        </Tag>\n      </Box>\n      <Box display=\"inline-flex\" margin=\"auto\">\n        <Box bg=\"gray.200\" borderRight=\"1px\">\n          <Box p={3} borderBottom=\"1px solid black\">\n            <Heading size=\"xs\">Scheduled</Heading>\n            <Text fontSize=\"xs\">{convertTime(props.response.scheduled)}</Text>\n          </Box>\n          <Box p={3}>\n            <Heading size=\"xs\">Actual</Heading>\n            <Text fontSize=\"xs\">{convertTime(props.response.actual)}</Text>\n          </Box>\n        </Box>\n        <Box bg=\"gray.200\">\n          <Box p={3} borderBottom=\"1px solid black\">\n            <Heading size=\"xs\">Estimated</Heading>\n            <Text fontSize=\"xs\">{convertTime(props.response.estimated)}</Text>\n          </Box>\n          <Box p={3}>\n            <Heading size=\"xs\">Runway</Heading>\n            <Text fontSize=\"xs\">\n              {convertTime(props.response.actual_runway)}\n            </Text>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default TimingInfo;\n","import React from \"react\";\nimport {\n  Accordion,\n  AccordionIcon,\n  AccordionItem,\n  AccordionHeader,\n  AccordionPanel,\n  Box,\n  Tag,\n  TagLabel,\n  Text,\n} from \"@chakra-ui/core\";\n\nconst MoreInfo = (props) => {\n  if (props.response.live) {\n    return (\n      <Accordion allowMultiple>\n        <AccordionItem>\n          <AccordionHeader>\n            <Box flex=\"1\" textAlign=\"left\">\n              More Info\n            </Box>\n            <AccordionIcon />\n          </AccordionHeader>\n          <AccordionPanel\n            bg=\"gray.100\"\n            display=\"flex\"\n            flexWrap=\"wrap\"\n            justifyContent=\"space-around\"\n            pb={4}\n          >\n            <Box mt=\"12px\">\n              <Tag variant=\"solid\" size=\"sm\">\n                <TagLabel>Aircraft Location</TagLabel>\n              </Tag>\n              <Box>\n                <Text fontSize=\"sm\">\n                  <strong>Latitude:</strong>{\" \"}\n                  {props.response.live.latitude || \"--\"}\n                </Text>\n                <Text fontSize=\"sm\">\n                  <strong>Longitude:</strong>{\" \"}\n                  {props.response.live.longitude || \"--\"}\n                </Text>\n                <Text fontSize=\"sm\">\n                  <strong>Altitude:</strong>{\" \"}\n                  {props.response.live.altitude || \"--\"}\n                </Text>\n                <Text fontSize=\"sm\">\n                  <strong>Direction:</strong>{\" \"}\n                  {props.response.live.direction || \"--\"}\n                </Text>\n              </Box>\n            </Box>\n            <Box mt=\"12px\">\n              <Tag variant=\"solid\" size=\"sm\">\n                <TagLabel>Aircraft Speed</TagLabel>\n              </Tag>\n              <Box>\n                <Text fontSize=\"sm\">\n                  <strong>Horizontal:</strong>{\" \"}\n                  {props.response.live.speed_horizontal || \"--\"}\n                </Text>\n                <Text fontSize=\"sm\">\n                  <strong>Vertical:</strong>{\" \"}\n                  {props.response.live.speed_vertical || \"--\"}\n                </Text>\n              </Box>\n            </Box>\n            <Box mt=\"12px\">\n              <Tag variant=\"solid\" size=\"sm\">\n                <TagLabel>Aircraft Type</TagLabel>\n              </Tag>\n              <Box>\n                <Text fontSize=\"sm\">\n                  <strong>Registration:</strong>\n                  {props.response.aircraft.registration || \"--\"}\n                </Text>\n                <Text fontSize=\"sm\">\n                  <strong>IATA:</strong> {props.response.aircraft.iata || \"--\"}\n                </Text>\n                <Text fontSize=\"sm\">\n                  <strong>ICAO:</strong> {props.response.aircraft.icao || \"--\"}\n                </Text>\n                <Text fontSize=\"sm\">\n                  <strong>ICAO24:</strong>{\" \"}\n                  {props.response.aircraft.icao24 || \"--\"}\n                </Text>\n              </Box>\n            </Box>\n            <Box mt=\"12px\">\n              <Tag variant=\"solid\" size=\"sm\">\n                <TagLabel>Airline</TagLabel>\n              </Tag>\n              <Box>\n                <Text fontSize=\"sm\">\n                  <strong>{props.response.airline.name || \"--\"}</strong>\n                </Text>\n                <Text fontSize=\"sm\">\n                  <strong>IATA:</strong> {props.response.airline.iata || \"--\"}\n                </Text>\n                <Text fontSize=\"sm\">\n                  <strong>ICAO:</strong> {props.response.airline.icao || \"--\"}\n                </Text>\n              </Box>\n            </Box>\n          </AccordionPanel>\n        </AccordionItem>\n      </Accordion>\n    );\n  }\n  return null;\n};\n\nexport default MoreInfo;\n","import React, { useState, useEffect } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\n\nconst MapComponent = (props) => {\n  const [position, setPosition] = useState(undefined);\n  // const [center, setCenter] = useState();\n\n  useEffect(() => {\n    props.response.live\n      ? setPosition({\n          lat: props.response.live.latitude,\n          lng: props.response.live.longitude,\n        })\n      : setPosition(undefined);\n  }, [props.response.live]);\n\n  const containerStyle = {\n    height: \"500px\",\n  };\n\n  return (\n    <LoadScript googleMapsApiKey=\"\">\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={{ lat: 36, lng: -104 }}\n        zoom={4}\n      >\n        {/* Child components, such as markers, info windows, etc. */}\n        <Marker position={position} />\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default React.memo(MapComponent);\n","import React from \"react\";\nimport { Box, Flex, Divider } from \"@chakra-ui/core\";\nimport StatusBar from \"./StatusBar\";\nimport MainInfo from \"./MainInfo\";\nimport MoreInfo from \"./MoreInfo\";\nimport MapComponent from \"../Map\";\n\nconst InfoBox = (props) => {\n  return (\n    <Box\n      margin=\"auto\"\n      marginTop={5}\n      maxWidth=\"4xl\"\n      border={{ xs: \"1px solid black\", md: \"5px solid black\" }}\n      borderRadius={{ md: 3 }}\n    >\n      <Box>\n        <StatusBar response={props.response} />\n      </Box>\n\n      <Flex\n        my={10}\n        flexDirection={{ xs: \"column\", md: \"row\" }}\n        justifyContent=\"center\"\n      >\n        <MainInfo response={props.response.departure || \"--\"} />\n        {/* orientation prop isn't responsive in Chakra-ui */}\n        <Divider orientation=\"vertical\" />\n        <Divider\n          mb={{ xs: \"2rem\", md: \"none\" }}\n          display={{ md: \"none\" }}\n          orientation=\"horizontal\"\n        />\n        <MainInfo response={props.response.arrival || \"--\"} arrival={true} />\n      </Flex>\n      <MapComponent response={props.response} />\n      <MoreInfo response={props.response} />\n    </Box>\n  );\n};\n\nexport default InfoBox;\n","export const response = {\n  pagination: {\n    limit: 100,\n    offset: 0,\n    count: 100,\n    total: 1669022,\n  },\n  data: [\n    {\n      flight_date: \"2019-12-12\",\n      flight_status: \"diverted\",\n      departure: {\n        airport: \"San Francisco International\",\n        timezone: \"America/Los_Angeles\",\n        iata: \"SFO\",\n        icao: \"KSFO\",\n        terminal: \"2\",\n        gate: \"D11\",\n        delay: 13,\n        scheduled: \"2019-12-12T04:20:00+00:00\",\n        estimated: \"2019-12-12T04:20:00+00:00\",\n        actual: \"2019-12-12T04:20:13+00:00\",\n        estimated_runway: \"2019-12-12T04:20:13+00:00\",\n        actual_runway: \"2019-12-12T04:20:13+00:00\",\n      },\n      arrival: {\n        airport: \"Dallas/Fort Worth International\",\n        timezone: \"America/Chicago\",\n        iata: \"DFW\",\n        icao: \"KDFW\",\n        terminal: \"A\",\n        gate: \"A22\",\n        baggage: \"A17\",\n        delay: 0,\n        scheduled: \"2019-12-12T04:20:00+00:00\",\n        estimated: \"2019-12-12T04:20:00+00:00\",\n        actual: null,\n        estimated_runway: null,\n        actual_runway: null,\n      },\n      airline: {\n        name: \"American Airlines\",\n        iata: \"AA\",\n        icao: \"AAL\",\n      },\n      flight: {\n        number: \"1004\",\n        iata: \"AA1004\",\n        icao: \"AAL1004\",\n        codeshared: null,\n      },\n      aircraft: {\n        registration: \"N160AN\",\n        iata: \"A321\",\n        icao: \"A321\",\n        icao24: \"A0F1BB\",\n      },\n      live: {\n        updated: \"2019-12-12T10:00:00+00:00\",\n        latitude: 36.2856,\n        longitude: -106.807,\n        altitude: 8846.82,\n        direction: 114.34,\n        speed_horizontal: 894.348,\n        speed_vertical: 1.188,\n        is_ground: false,\n      },\n    },\n  ],\n};\n","import React, { useState } from \"react\";\nimport { Box } from \"@chakra-ui/core\";\nimport HeaderComponent from \"../../Components/Header/Header\";\nimport SearchBar from \"../../Components/SearchBar/SearchBar\";\nimport InfoBox from \"../../Components/InfoBox/InfoBox\";\n// import ArrivalInfo from \"../../Components/InfoBox/ArrivalInfo\";\n// import LiveInfo from \"../../Components/InfoBox/LiveInfo\";\n\nimport { response as defaultResponse } from \"../../mockResponse\";\n\nconst App = () => {\n  const [response, setResponse] = useState(defaultResponse);\n  return (\n    <Box>\n      <HeaderComponent />\n      <SearchBar setResponse={setResponse} />\n      <InfoBox response={response.data[0]} />\n    </Box>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Pages/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <CSSReset />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}